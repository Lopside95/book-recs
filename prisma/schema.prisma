datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

generator client {
    provider = "prisma-client-js"
}

model Book {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    genre    Genre  @relation(fields: [genreId], references: [id])
    author   Author @relation(fields: [authorId], references: [id])
    rating   Int
    title    String @unique
    authorId String @db.ObjectId
    genreId  String @db.ObjectId

    @@index([genreId])
    @@index([authorId])
}

model Author {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String @unique
    Book Book[]
}

model Genre {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String @unique
    Book Book[]
}

// model Book {
//     id       String @id @default(auto()) @map("_id") @db.ObjectId
//     genre    Genre  @relation(fields: [genreId], references: [id])
//     author   Author @relation(fields: [authorId], references: [id])
//     rating   Rating @relation(fields: [ratingId], references: [id])
//     title    String
//     genreId  String @db.ObjectId
//     authorId String @db.ObjectId
//     ratingId String @db.ObjectId

//     @@index([genreId])
//     @@index([authorId])
//     @@index([ratingId])
//     @@index([title])
// }
// model Rating {
//     id         String @id @default(auto()) @map("_id") @db.ObjectId
//     bookRating Int
// }

// model Testing {
//     id       String @id @default(auto()) @map("_id") @db.ObjectId
//     question String
//     answer   String
// }

// model Yes {
//     id   String @id @default(auto()) @map("_id") @db.ObjectId
//     what String
// }
